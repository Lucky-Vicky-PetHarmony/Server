plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'luckyvicky'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	springSecurityVersion = '6.1.9'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

	// AWS S3 서비스를 사용하기 위한 라이브러리
	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.238'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.3'
	implementation 'javax.activation:activation:1.1.1'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.1.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jpa'
}

tasks.named('test') {
	useJUnitPlatform()
}

def generatedSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"

// QueryDSL 플러그인 설정
querydsl {
	jpa = true
	querydslSourcesDir = generatedSourcesDir
}

// SourceSets 설정: QueryDSL로 생성된 Q 클래스를 포함
sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', generatedSourcesDir]
		}
	}
}
